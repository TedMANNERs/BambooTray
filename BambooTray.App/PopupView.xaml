<Window x:Class="BambooTray.App.PopupView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:tb="http://www.hardcodet.net/taskbar"
        xmlns:buildstate="clr-namespace:BambooTray.App.Bamboo.Resources"
        Visibility="Hidden" ShowInTaskbar="False" Icon="Images/bamboo.ico" WindowStyle="None" Width="10" Height="10" 
        Closed="Window_Closed" Loaded="Window_Loaded">

    <tb:TaskbarIcon Name="TaskbarIcon"
                    IconSource="Images/bamboo.ico"
                    PopupActivation="LeftClick"
                    MenuActivation="RightClick">
        <tb:TaskbarIcon.ContextMenu>
            <ContextMenu>
                <MenuItem Header="Exit" Click="Exit_Click"/>
            </ContextMenu>
        </tb:TaskbarIcon.ContextMenu>
        <tb:TaskbarIcon.TrayPopup>
            <Border BorderBrush="LightGray" BorderThickness="1">
                <ItemsControl ItemsSource="{Binding BambooPlans}" Background="White" AlternationCount="{Binding BambooPlans.Count}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Button Cursor="Hand" Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}, Path=DataContext.OpenInBrowserCommand}"
                                    CommandParameter="{Binding PlanKey}">
                                <Button.Template>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <ContentPresenter />
                                    </ControlTemplate>
                                </Button.Template>
                                <StackPanel Orientation="Horizontal" Margin="10">
                                    <Ellipse Height="30" Width="30" Margin="0,0,10,0">
                                        <Ellipse.Style>
                                            <Style TargetType="{x:Type Ellipse}">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding BuildState}" Value="{x:Static buildstate:BuildState.Failed}">
                                                        <Setter Property="Fill" Value="Red"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding BuildState}" Value="{x:Static buildstate:BuildState.Successful}">
                                                        <Setter Property="Fill" Value="Green"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding BuildState}" Value="{x:Static buildstate:BuildState.Unknown}">
                                                        <Setter Property="Fill" Value="DarkGray"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding IsBuilding}" Value="true">
                                                        <Setter Property="Fill" Value="DodgerBlue"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Enabled}" Value="false">
                                                        <Setter Property="Fill" Value="Gray"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Ellipse.Style>
                                    </Ellipse>
                                    <Label Content="{Binding ProjectName}" FontSize="16"/>
                                    <Label Content="{Binding BuildName}" FontSize="16"/>
                                    <Label Content="{Binding RemainingTime}" FontSize="12"/>
                                </StackPanel>
                            </Button>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </Border>
        </tb:TaskbarIcon.TrayPopup>
    </tb:TaskbarIcon>
</Window>
